{
  "document_id": "Copy of Fin Standalone \u2013 How it works_parsed_RAG",
  "recommended_chunk_size": 512,
  "chunk_overlap": 128,
  "logical_sections": [
    {
      "section": "Eoin Nolan \u2022 Last updated Oct 30, 2024",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "# What is Standalone?",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "# How synchronization works",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "# Shared concepts",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "# The Standalone::Models::WorkflowReference record",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "# The Standalone::Models::ExternalReference record",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "NOT_CONFIGURED \u2013 The integration has not been set up at all",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "CREATED \u2013\u00a0The integration has connected to the relevant API",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "# Data Synchronization",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "Standalone::Salesforce::UserFields",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "Standalone::Salesforce::CaseFields",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "Standalone::Zendesk::UserFields",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "Standalone::Zendesk::TicketFields",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "# Dummy Admins",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "# The Zendesk Tickets Synchronizer",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "# Connection and Setup",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "Your Zendesk subdomain \u2013\u00a0e.g. mysubdomain.zendesk.com",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "# Choosing an Agent",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "# Zendesk Triggers, Webhooks, and Automations",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "# Assignment to Fin",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "# Receiving new Tickets from Zendesk",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "# The ZendeskTicketSyncWorker",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "Updates from Zendesk pass a zendesk_ticket_id",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "Updates from Intercom pass an intercom_conversation_id",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "Passing both IDs at once will raise an Argument Error.",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "# Inside the Standalone::Zendesk::TicketSynchronizer",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "We check that the ticket actually exists in Zendesk.",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "find_or_create_conversation",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "synchronize_zendesk_data_fields",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "pull_unsynced_comments_from_zendesk",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "push_conversation_to_zendesk",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "record_synchronization_state",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "# TicketSynchronizer.find_or_create_conversation",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "The message type is set specifically to :zendesk_ticket.",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "# TicketSynchronizer.synchronize_zendesk_data_fields",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "# TicketSynchronizer.pull_unsynced_comments_from_zendesk",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "# TicketSynchronizer.push_conversation_to_zendesk",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "What state is synchronized?",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "TicketSynchronizer.push_unsynced_comments_to_zendesk",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "We loop through conversation parts.",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "Author type (Bot/Admin/User)",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "Author ID",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "Is Public? (Is this a note or a comment?)",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "internal_id external_id 1 \u201cabc\u201d 2 \u201cabc-1\u201d 3 \u201cabc-2\u201d",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "# TicketSynchronizer.record_synchronization_state",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "# Wrapping up: TicketSynchronizer",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "# The Zendesk Messaging Integration",
      "preserve_as_unit": true,
      "priority_weight": 1.2
    },
    {
      "section": "# Switchboards and Integrations",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "# Connection and Setup",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "Their Sunshine App ID",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "Their Conversations API Key ID",
      "preserve_as_unit": true,
      "priority_weight": 1.0
    },
    {
      "section": "Their Secret Key.",
      "preserve_as_unit": true,
      "priority_weight": 1.0
    },
    {
      "section": "# Messaging Channels",
      "preserve_as_unit": true,
      "priority_weight": 1.2
    },
    {
      "section": "# Testing Fin",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "# Activating Fin",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "# Receiving Events via Webhook",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "If Fin is not enabled, the webhook events are ignored.",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "A missing integration record will result in a 404.",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "On a URL that matches `standalone.intercom`",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "# Standalone::Zendesk::Webhooks::SunshinePayload",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "# Sunshine::ConversationCreatedEvent.process",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "# Standalone::Zendesk::SunshineIntercomEventHandlers",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "At the start of handling a Sunshine Conversation Event.",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "# Standalone::Zendesk::SunshineConversations",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "internal_id external_id \u201c123\u201d \u201ca\u201d \u201c123-1\u201d \u201cb\u201d \u201c123-2\u201d \u201cc\u201d",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "# Sunshine::ConversationMessageEvent.process",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    },
    {
      "section": "# Wrapping up: Zendesk Sunshine",
      "preserve_as_unit": false,
      "priority_weight": 1.0
    }
  ]
}